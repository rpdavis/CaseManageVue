const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/index-BCIc2Kag.js","assets/index-PpYp4nDT.css"])))=>i.map(i=>d[i]);
import{_ as re,r as c,u as ce,c as ge,a as q,o as ue,b as D,d as T,e,f as I,t as l,w as ve,v as pe,g as S,h as j,s as fe,i as se,j as ne,l as me,k as z,m as U,n as oe,p as de,q as he,x as B,y as ye,z as Se,A as H,B as be,C as $e,D as we,E as te,F as _e,G as De,H as Te,I as Pe,J as le,S as ke,K as ae,L as ie}from"./index-BCIc2Kag.js";const Ie={class:"secure-pdf-test"},Ce={class:"test-section"},Fe={class:"status-grid"},Ne={class:"status-item"},Me={class:"status-value"},Ee={class:"status-item"},Re={class:"status-value"},Ue={class:"status-item"},xe={class:"status-value"},Ae={class:"status-item"},Le={class:"status-value"},Ve={class:"test-section"},je=["disabled"],Oe=["disabled"],qe={class:"test-section"},Be=["disabled"],Je={key:0,class:"error-message"},Ke={key:1,class:"success-message"},ze={key:0,class:"test-section"},He=["disabled"],Ye={key:0,class:"error-message"},Ge={key:1,class:"success-message"},Qe={class:"test-section"},We=["disabled"],Xe={key:0,class:"error-message"},Ze={key:1,class:"success-message"},et={class:"test-section"},tt=["disabled"],st={key:0,class:"error-message"},nt={key:1,class:"success-message"},ot={__name:"SecurePdfTest",setup(N){const a=c(null),i=c("test-student-123"),b=c(null),v=c(!1),m=c(!1),$=c(!1),r=c(null),d=c(null),f=c(!1),u=c(null),g=c(null),P=c("Checking..."),p=c("Checking..."),w=c("Checking..."),h=c("Checking..."),k=c(null),M=c(null),E=c(null),J=c(null),{uploadPdf:Z,downloadPdf:ee,isUploading:Y,isDownloading:G}=ce();ge(()=>{var o,t,_;return((o=q.currentUser)==null?void 0:o.role)||((_=(t=q.currentUser)==null?void 0:t.claims)==null?void 0:_.role)||"unknown"});const n=o=>{const t=o.target.files[0];if(t){if(t.type!=="application/pdf"){alert("Please select a PDF file"),o.target.value="";return}a.value=t,M.value=null,k.value=null,r.value=null,d.value=null}},s=async()=>{var o,t;if(!i.value){alert("Please enter a student ID");return}try{v.value=!0;const _=q.currentUser;if(_){const V=await _.getIdTokenResult();console.log("🔍 User token result:",V),console.log("🔍 User role from token:",V.claims.role)}const L=z(U,"students",i.value);(await oe(L)).exists()?alert("ℹ️ Test student already exists"):(await de(L,{app:{studentData:{firstName:"Test",lastName:"Student",grade:"7",plan:"IEP",caseManagerId:((o=q.currentUser)==null?void 0:o.uid)||"test-case-manager"},staffIds:[((t=q.currentUser)==null?void 0:t.uid)||"test-user"],schedule:{periods:{},classServices:[]},providers:{},accommodations:{instruction:"",assessment:""},flags:{flag1:!1,flag2:!1}},createdAt:he()}),alert("✅ Test student created successfully!"))}catch(_){alert(`❌ Error creating test student: ${_.message}`),console.error("Error creating test student:",_),_.message.includes("permissions")&&alert("⚠️ Admin permissions required. Try using an existing student ID instead.")}finally{v.value=!1}},A=async()=>{var o,t,_,L;try{m.value=!0;const x=B(U,"students"),V=ye(x,Se(5)),K=await H(V);if(K.empty)alert("❌ No students found in database");else{const W=K.docs.map(X=>({id:X.id,...X.data()}));console.log("📋 Available students:",W);const O=W[0];i.value=O.id,alert(`✅ Found student: ${((t=(o=O.app)==null?void 0:o.studentData)==null?void 0:t.firstName)||"Unknown"} ${((L=(_=O.app)==null?void 0:_.studentData)==null?void 0:L.lastName)||"Student"} (ID: ${O.id})`)}}catch(x){alert(`❌ Error finding student: ${x.message}`),console.error("Error finding student:",x)}finally{m.value=!1}},y=async()=>{if(!a.value||!i.value){alert("Please select a file and enter a student ID");return}try{M.value=null,k.value=null;const o=await Z(a.value,i.value);k.value=o,console.log("✅ Test PDF uploaded successfully:",o)}catch(o){M.value=o.message,console.error("❌ Test PDF upload failed:",o)}},R=async()=>{if(!k.value||!i.value){alert("Please upload a PDF first");return}try{E.value=null,J.value=null,await ee(k.value,i.value,"test-document.pdf"),J.value=!0,console.log("✅ Test PDF downloaded successfully")}catch(o){E.value=o.message,console.error("❌ Test PDF download failed:",o)}},C=async()=>{if(!a.value){alert("Please select a file first");return}try{$.value=!0,r.value=null,d.value=null;const o=se(ne,`public/test-${Date.now()}.pdf`);await be(o,a.value),d.value=!0,console.log("✅ Direct upload successful")}catch(o){r.value=o.message,console.error("❌ Direct upload failed:",o)}finally{$.value=!1}},F=async()=>{if(!i.value){alert("Please enter a student ID first");return}try{f.value=!0,u.value=null,g.value=null;const{getFunctions:o,httpsCallable:t}=await $e(async()=>{const{getFunctions:W,httpsCallable:O}=await import("./index-BCIc2Kag.js").then(X=>X.M);return{getFunctions:W,httpsCallable:O}},__vite__mapDeps([0,1])),_=o(),L=t(_,"getStudentFileUrl"),x="test-document.pdf";console.log(`🔍 Testing cloud function with studentId: ${i.value}, fileName: ${x}`);const V=await L({studentId:i.value,fileName:x});console.log("✅ Cloud function result:",V.data),g.value=!0;const K=V.data.url;K&&!K.includes("token=")?console.log("✅ URL is private (no download token)"):console.warn("⚠️ URL may not be private")}catch(o){u.value=o.message,console.error("❌ Cloud function test failed:",o)}finally{f.value=!1}},Q=async()=>{try{const o=fe.encryptionKey;P.value=o&&o!=="your-dev-key-here"?"✅ Configured":"⚠️ Using default key";try{const t=se(ne,"public/test-access");await me(t),p.value="✅ Accessible"}catch(t){t.code==="storage/unauthorized"?p.value="⚠️ Limited access (expected)":p.value="❌ Access denied"}try{const t=z(U,"test","test");await oe(t),w.value="✅ Accessible"}catch{w.value="❌ Access denied"}try{const t=q.currentUser;if(t){const _=await t.getIdTokenResult();h.value=_.claims.role||"unknown",console.log("🔍 User role detected:",h.value)}else h.value="not authenticated"}catch(t){h.value="error reading role",console.error("Error reading user role:",t)}}catch(o){console.error("Error checking system status:",o)}};return ue(()=>{Q()}),(o,t)=>(T(),D("div",Ie,[t[16]||(t[16]=e("h2",null,"🔒 Secure PDF System Test",-1)),e("div",Ce,[t[5]||(t[5]=e("h3",null,"System Status",-1)),e("div",Fe,[e("div",Ne,[t[1]||(t[1]=e("span",{class:"status-label"},"Encryption Key:",-1)),e("span",Me,l(P.value),1)]),e("div",Ee,[t[2]||(t[2]=e("span",{class:"status-label"},"Storage Access:",-1)),e("span",Re,l(p.value),1)]),e("div",Ue,[t[3]||(t[3]=e("span",{class:"status-label"},"Firestore Access:",-1)),e("span",xe,l(w.value),1)]),e("div",Ae,[t[4]||(t[4]=e("span",{class:"status-label"},"User Role:",-1)),e("span",Le,l(h.value),1)])])]),e("div",Ve,[t[6]||(t[6]=e("h3",null,"Test Student ID",-1)),ve(e("input",{"onUpdate:modelValue":t[0]||(t[0]=_=>i.value=_),placeholder:"Enter test student ID",class:"student-id-input"},null,512),[[pe,i.value]]),t[7]||(t[7]=e("p",{class:"help-text"},"Enter a student ID to test with. You can:",-1)),t[8]||(t[8]=e("ul",{class:"help-text"},[e("li",null,"Use an existing student ID from your database"),e("li",null,"Create a new test student (requires admin permissions)"),e("li",null,'Use "test-student-123" for testing')],-1)),e("button",{onClick:s,disabled:v.value,class:"btn btn-secondary"},l(v.value?"Creating...":"Create Test Student"),9,je),e("button",{onClick:A,disabled:m.value,class:"btn btn-secondary"},l(m.value?"Finding...":"Find Existing Student"),9,Oe)]),e("div",qe,[t[9]||(t[9]=e("h3",null,"Upload Test PDF",-1)),e("input",{type:"file",accept:"application/pdf",onChange:n,ref_key:"fileInput",ref:b},null,544),e("button",{onClick:y,disabled:!a.value||S(Y)},l(S(Y)?"🔄 Uploading...":"📤 Upload PDF"),9,Be),M.value?(T(),D("div",Je,l(M.value),1)):I("",!0),k.value?(T(),D("div",Ke," ✅ PDF uploaded successfully! Secure filename: "+l(k.value),1)):I("",!0)]),k.value?(T(),D("div",ze,[t[10]||(t[10]=e("h3",null,"Download Test PDF",-1)),e("button",{onClick:R,disabled:S(G)},l(S(G)?"🔄 Downloading...":"📥 Download PDF"),9,He),E.value?(T(),D("div",Ye,l(E.value),1)):I("",!0),J.value?(T(),D("div",Ge," ✅ PDF downloaded successfully! ")):I("",!0)])):I("",!0),e("div",Qe,[t[11]||(t[11]=e("h3",null,"Alternative Test: Direct Storage Upload",-1)),t[12]||(t[12]=e("p",{class:"help-text"},"This test bypasses the secure PDF system and uploads directly to storage for comparison.",-1)),e("button",{onClick:C,disabled:!a.value||$.value},l($.value?"🔄 Uploading...":"📤 Test Direct Upload"),9,We),r.value?(T(),D("div",Xe,l(r.value),1)):I("",!0),d.value?(T(),D("div",Ze," ✅ Direct upload successful! This confirms storage permissions are working. ")):I("",!0)]),e("div",et,[t[14]||(t[14]=e("h3",null,"Test Cloud Function: Private URL Generation",-1)),t[15]||(t[15]=e("p",{class:"help-text"},"Test if the cloud function can generate private URLs for existing files.",-1)),e("button",{onClick:F,disabled:f.value},l(f.value?"🔄 Testing...":"🔗 Test Cloud Function"),9,tt),u.value?(T(),D("div",st,l(u.value),1)):I("",!0),g.value?(T(),D("div",nt,t[13]||(t[13]=[j(" ✅ Cloud function working! Private URL generated successfully. "),e("br",null,null,-1),e("small",null,"URL expires in 5 minutes",-1)]))):I("",!0)])]))}},lt=re(ot,[["__scopeId","data-v-4c041459"]]);async function at(){var N;console.log("Starting student ID migration...");try{const a=B(U,"students"),i=await H(a);console.log(`Found ${i.size} students to migrate`);let b=0,v=0;for(const m of i.docs){const $=m.data(),r=m.id;if(!/^\d+$/.test(r)){console.log(`Student ${r} already uses auto-generated ID, skipping`);continue}const d=r;try{const f=z(B(U,"students")),u={...$,app:{...$.app,studentData:{...(N=$.app)==null?void 0:N.studentData,ssid:d}},migratedFrom:r,migratedAt:new Date().toISOString()};await de(f,u),await we(z(U,"students",r)),console.log(`✅ Migrated student ${r} → ${f.id}`),b++}catch(f){console.error(`❌ Failed to migrate student ${r}:`,f),v++}}return console.log(`Migration complete: ${b} migrated, ${v} errors`),{migratedCount:b,errorCount:v}}catch(a){throw console.error("Migration failed:",a),a}}async function it(){var N,a;console.log("Verifying migration...");try{const i=B(U,"students"),b=await H(i);let v=0,m=0;for(const $ of b.docs){const r=$.data(),d=$.id,f=(a=(N=r.app)==null?void 0:N.studentData)==null?void 0:a.ssid;f?(console.log(`✅ Student ${d} has SSID: ${f}`),v++):(console.warn(`⚠️ Student ${d} missing SSID in app data`),m++)}return console.log(`Verification complete: ${v} verified, ${m} issues`),{verifiedCount:v,issuesCount:m}}catch(i){throw console.error("Verification failed:",i),i}}async function rt(){var v,m,$,r;console.log("🔄 Starting period label migration...");const{getNumber:N}=te();let a=0,i=0,b=[];try{const d=B(U,"students"),f=await H(d);a=f.size,console.log(`📊 Found ${a} students to check`);for(const u of f.docs)try{const g=u.data();let P=!1,p={};const w=((m=(v=g.app)==null?void 0:v.schedule)==null?void 0:m.periods)||g.schedule||{};if(Object.entries(w).forEach(([h,k])=>{if(isNaN(parseInt(h))){const M=N(h);if(M)p[M]=k,P=!0,console.log(`🔧 Converting "${h}" → ${M} for student ${u.id}`);else{const E=h.match(/^(?:period|per)(\d+)$/i);E?(p[parseInt(E[1])]=k,P=!0,console.log(`🔧 Converting "${h}" → ${E[1]} for student ${u.id}`)):(console.warn(`⚠️ Could not convert period key "${h}" for student ${u.id}`),p[h]=k)}}else p[h]=k}),P){const h={};(r=($=g.app)==null?void 0:$.schedule)!=null&&r.periods?h["app.schedule.periods"]=p:g.schedule&&(h.schedule=p),Object.keys(h).length>0&&(await _e(z(U,"students",u.id),h),i++,console.log(`✅ Updated student ${u.id}`))}}catch(g){console.error(`❌ Error processing student ${u.id}:`,g),b.push({studentId:u.id,error:g.message})}return console.log("🎉 Migration completed!"),console.log("📈 Results:"),console.log(`   - Total students checked: ${a}`),console.log(`   - Students migrated: ${i}`),console.log(`   - Errors: ${b.length}`),b.length>0&&(console.warn("⚠️ Errors encountered:"),b.forEach(({studentId:u,error:g})=>{console.warn(`   - ${u}: ${g}`)})),{success:!0,totalStudents:a,migratedStudents:i,errors:b}}catch(d){return console.error("💥 Migration failed:",d),{success:!1,error:d.message,totalStudents:a,migratedStudents:i,errors:b}}}async function ut(){var b,v;console.log("👀 Starting migration preview...");const{getNumber:N}=te();let a=0,i=[];try{const m=B(U,"students"),$=await H(m);a=$.size;for(const r of $.docs){const d=r.data(),f=((v=(b=d.app)==null?void 0:b.schedule)==null?void 0:v.periods)||d.schedule||{};let u=[];Object.keys(f).forEach(g=>{if(isNaN(parseInt(g))){const P=N(g);if(P)u.push({from:g,to:P});else{const p=g.match(/^(?:period|per)(\d+)$/i);p&&u.push({from:g,to:parseInt(p[1])})}}}),u.length>0&&i.push({id:r.id,name:`${d.firstName||""} ${d.lastName||""}`.trim(),changes:u})}return console.log("📋 Migration Preview Results:"),console.log(`   - Total students: ${a}`),console.log(`   - Students needing migration: ${i.length}`),i.length>0&&(console.log("   - Changes needed:"),i.forEach(r=>{console.log(`     📝 ${r.name} (${r.id}):`),r.changes.forEach(d=>{console.log(`        "${d.from}" → ${d.to}`)})})),{totalStudents:a,studentsNeedingMigration:i,changesNeeded:i.length>0}}catch(m){return console.error("💥 Preview failed:",m),{error:m.message,totalStudents:0,studentsNeedingMigration:[],changesNeeded:!1}}}const dt={class:"testing-view"},ct={class:"test-section"},gt={class:"status-grid"},vt={class:"status-item"},pt={class:"status-item"},ft={class:"status-item"},mt={key:0,class:"test-section"},ht={class:"settings-display"},yt={class:"setting-group"},St={class:"setting-values"},bt={class:"setting-group"},$t={class:"setting-values"},wt={class:"setting-group"},_t={class:"setting-values"},Dt={class:"setting-group"},Tt={class:"setting-values"},Pt={class:"test-section"},kt={class:"admin-action-btns"},It=["disabled"],Ct=["disabled"],Ft={class:"test-section"},Nt={class:"integration-test"},Mt={key:0,class:"test-form-container"},Et={class:"test-section"},Rt={class:"admin-action-btns"},Ut=["disabled"],xt=["disabled"],At={key:0,class:"migration-result"},Lt={class:"test-section"},Vt={class:"period-migration-controls"},jt=["disabled"],Ot=["disabled"],qt={key:0,class:"migration-result"},Bt={class:"test-section"},Jt={class:"ssid-test-controls"},Kt=["disabled"],zt={key:0,class:"ssid-test-result"},Ht={class:"test-section"},Yt={__name:"TestingView",setup(N){const{appSettings:a,loadAppSettings:i,resetAppSettings:b,loading:v,error:m}=De(),{labels:$}=te(),r=c(!1),d=c(!1),f=c(!1),u=c(null),g=c(!1),P=c(null),p=c(!1),w=c(null);ue(async()=>{console.log("TestingView: Component mounted, checking app settings...")});const h=async()=>{try{await i(),console.log("TestingView: Settings reloaded successfully")}catch(n){console.error("TestingView: Error reloading settings:",n)}},k=async()=>{try{await b(),console.log("TestingView: Settings reset successfully")}catch(n){console.error("TestingView: Error resetting settings:",n)}},M=n=>{console.log("TestingView: Test student saved:",n),r.value=!1},E=async()=>{d.value=!0,u.value=null;try{const n=await at();u.value=n,console.log("Migration completed:",n)}catch(n){u.value={error:n.message},console.error("Migration failed:",n)}finally{d.value=!1}},J=async()=>{f.value=!0,u.value=null;try{const n=await it();u.value=n,console.log("Verification completed:",n)}catch(n){u.value={error:n.message},console.error("Verification failed:",n)}finally{f.value=!1}},Z=async()=>{g.value=!0,P.value=null;try{const n=[{sourcedId:"123456789",givenName:"John",familyName:"Doe",specialEducation:"true"},{SSID:"987654321",FirstName:"Jane",LastName:"Smith",IEP:"Yes"},{ssid:"555666777",FirstName:"Bob",LastName:"Johnson",iep:"1"},{StateStudentID:"111222333",FirstName:"Alice",LastName:"Brown",504:"true"}],s={aeriesMapping:{},seisMapping:{},ssidExtraction:{},fieldMapping:{}};n.forEach((y,R)=>{const C={};Object.keys(y).forEach(F=>{C[F]=ae(F)}),s.aeriesMapping[`row_${R}`]=C}),n.forEach((y,R)=>{const C={};Object.keys(y).forEach(F=>{C[F]=ie(F)}),s.seisMapping[`row_${R}`]=C}),n.forEach((y,R)=>{var F;const C=(F=y.sourcedId||y.SSID||y.ssid||y.StateStudentID||y.stateStudentId)==null?void 0:F.trim();s.ssidExtraction[`row_${R}`]={original:y,extractedSSID:C,success:!!C}});const A=["specialEducation","iep","IEP","plan504","504","disabilities","accommodations"];s.fieldMapping={aeries:A.map(y=>({field:y,mapped:ae(y)})),seis:A.map(y=>({field:y,mapped:ie(y)}))},P.value={success:!0,message:"SSID resolution test completed successfully",results:s},console.log("SSID resolution test completed:",s)}catch(n){P.value={success:!1,error:n.message,message:"SSID resolution test failed"},console.error("SSID resolution test failed:",n)}finally{g.value=!1}},ee=()=>{P.value=null},Y=async()=>{p.value=!0,w.value=null;try{console.log("Starting period label migration preview...");const n=await ut();n.error?w.value=`Preview failed: ${n.error}`:n.changesNeeded?w.value=`Preview completed: ${n.studentsNeedingMigration.length} students need migration (see console for details)`:w.value="No migration needed - all students already use numeric period keys"}catch(n){console.error("Period migration preview failed:",n),w.value=`Preview error: ${n.message}`}finally{p.value=!1}},G=async()=>{if(confirm("This will update period keys from labels to numbers for all students. Continue?")){p.value=!0,w.value=null;try{console.log("Starting period label migration...");const n=await rt();n.success?(w.value=`Migration completed: ${n.migratedStudents}/${n.totalStudents} students updated`,n.errors.length>0&&(w.value+=` (${n.errors.length} errors - see console)`)):w.value=`Migration failed: ${n.error}`}catch(n){console.error("Period migration failed:",n),w.value=`Migration error: ${n.message}`}finally{p.value=!1}}};return(n,s)=>{var A,y,R,C,F,Q;return T(),D("div",dt,[s[21]||(s[21]=e("h2",null,"App Settings Testing",-1)),e("div",ct,[s[5]||(s[5]=e("h3",null,"App Settings Status",-1)),e("div",gt,[e("div",vt,[s[2]||(s[2]=e("strong",null,"Loading:",-1)),j(" "+l(S(v)?"Yes":"No"),1)]),e("div",pt,[s[3]||(s[3]=e("strong",null,"Error:",-1)),j(" "+l(S(m)||"None"),1)]),e("div",ft,[s[4]||(s[4]=e("strong",null,"Loaded:",-1)),j(" "+l(S(a)&&Object.keys(S(a)).length>0?"Yes":"No"),1)])])]),S(a)?(T(),D("div",mt,[s[10]||(s[10]=e("h3",null,"Current Settings",-1)),e("div",ht,[e("div",yt,[e("h4",null,"Grades ("+l(((A=S(a).grades)==null?void 0:A.length)||0)+")",1),e("div",St,l(((y=S(a).grades)==null?void 0:y.join(", "))||"None configured"),1)]),e("div",bt,[e("h4",null,"Class Services ("+l(((R=S(a).classServices)==null?void 0:R.length)||0)+")",1),e("div",$t,[(T(!0),D(Te,null,Pe(S(a).classServices,o=>{var t;return T(),D("div",{key:o.name,class:"service-item"},[e("strong",null,l(o.name)+":",1),j(" "+l(((t=o.enabledSubcategories)==null?void 0:t.join(", "))||"None enabled"),1)])}),128))])]),e("div",wt,[e("h4",null,"Service Providers ("+l(((C=S(a).serviceProviders)==null?void 0:C.length)||0)+")",1),e("div",_t,l(((F=S(a).serviceProviders)==null?void 0:F.join(", "))||"None configured"),1)]),e("div",Dt,[s[9]||(s[9]=e("h4",null,"Periods",-1)),e("div",Tt,[s[6]||(s[6]=e("strong",null,"Number:",-1)),j(" "+l(S(a).numPeriods||0),1),s[7]||(s[7]=e("br",null,null,-1)),s[8]||(s[8]=e("strong",null,"Labels:",-1)),j(" "+l(((Q=S($))==null?void 0:Q.join(", "))||"None"),1)])])])])):I("",!0),e("div",Pt,[s[11]||(s[11]=e("h3",null,"Test Actions",-1)),e("div",kt,[e("button",{onClick:h,disabled:S(v),class:"admin-action-btn",style:{"min-width":"140px","max-width":"140px"}},l(S(v)?"Loading...":"Reload Settings"),9,It),e("button",{onClick:k,disabled:S(v),class:"admin-action-btn",style:{"min-width":"140px","max-width":"140px"}}," Reset to Defaults ",8,Ct)])]),e("div",Ft,[s[13]||(s[13]=e("h3",null,"Component Integration Test",-1)),e("div",Nt,[s[12]||(s[12]=e("p",null,"This section tests if the StudentForm can access app settings:",-1)),e("button",{onClick:s[0]||(s[0]=o=>r.value=!r.value),class:"btn btn-primary"},l(r.value?"Hide":"Show")+" Test Student Form ",1),r.value?(T(),D("div",Mt,[le(ke,{users:{userRoles:{}},mode:"new",onClose:s[1]||(s[1]=o=>r.value=!1),onSaved:M})])):I("",!0)])]),e("div",Et,[s[15]||(s[15]=e("h3",null,"Migration Tools",-1)),e("div",Rt,[e("button",{onClick:E,disabled:d.value,class:"admin-action-btn",style:{"min-width":"160px","max-width":"160px"}},l(d.value?"Migrating...":"Migrate Student IDs"),9,Ut),e("button",{onClick:J,disabled:f.value,class:"admin-action-btn",style:{"min-width":"140px","max-width":"140px"}},l(f.value?"Verifying...":"Verify Migration"),9,xt)]),u.value?(T(),D("div",At,[s[14]||(s[14]=e("h4",null,"Migration Result:",-1)),e("pre",null,l(JSON.stringify(u.value,null,2)),1)])):I("",!0)]),e("div",Lt,[s[17]||(s[17]=e("h3",null,"Period Label Migration",-1)),e("div",Vt,[e("button",{onClick:Y,disabled:p.value,class:"btn btn-secondary"},l(p.value?"Previewing...":"Preview Period Migration"),9,jt),e("button",{onClick:G,disabled:p.value,class:"btn btn-warning"},l(p.value?"Migrating...":"Run Period Migration"),9,Ot)]),w.value?(T(),D("div",qt,[s[16]||(s[16]=e("h4",null,"Period Migration Result:",-1)),e("p",null,l(w.value),1)])):I("",!0)]),e("div",Bt,[s[19]||(s[19]=e("h3",null,"SSID Resolution Test",-1)),e("div",Jt,[e("button",{onClick:Z,disabled:g.value,class:"btn btn-primary"},l(g.value?"Testing...":"Test SSID Resolution"),9,Kt),e("button",{onClick:ee,class:"btn btn-secondary"}," Clear Results ")]),P.value?(T(),D("div",zt,[s[18]||(s[18]=e("h4",null,"SSID Resolution Test Result:",-1)),e("pre",null,l(JSON.stringify(P.value,null,2)),1)])):I("",!0)]),e("div",Ht,[s[20]||(s[20]=e("h3",null,"🔒 Secure PDF System Test",-1)),le(lt)])])}}},Qt=re(Yt,[["__scopeId","data-v-16ace2fd"]]);export{Qt as default};
